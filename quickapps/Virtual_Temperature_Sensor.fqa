{"name":"Wirt. Temp. Syp. 2 PiÄ™tro","type":"com.fibaro.temperatureSensor","apiVersion":"1.2","initialProperties":{"viewLayout":{"$jason":{"body":{"header":{"style":{"height":"0"},"title":"quickApp_device_1022"},"sections":{"items":[{"components":[{"name":"temp","style":{"weight":"1.2"},"text":"Temp. sensor 1","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"},{"components":[{"name":"all_sensors","style":{"weight":"1.2"},"text":"Temp. sensor 2","type":"label","visible":true},{"style":{"weight":"0.5"},"type":"space"}],"style":{"weight":"1.2"},"type":"vertical"}]}},"head":{"title":"quickApp_device_1022"}}},"uiCallbacks":[],"quickAppVariables":[{"name":"intervalSecs","type":"string","value":"120"}],"typeTemplateInitialized":true},"files":[{"name":"main","isMain":true,"isOpen":true,"content":"-- Temperature sensor type have no actions to handle\n-- To update temperature, update property \"value\" with floating point number\n-- Eg. self:updateProperty(\"value\", 18.12) \n\n-- To update controls you can use method self:updateView(<component ID>, <component property>, <desired value>). Eg:  \n-- self:updateView(\"slider\", \"value\", \"55\") \n-- self:updateView(\"button1\", \"text\", \"MUTE\") \n-- self:updateView(\"label\", \"text\", \"TURNED ON\") \n\n-- This is QuickApp inital method. It is called right after your QuickApp starts (after each save or on gateway startup). \n-- Here you can set some default values, setup http connection or get QuickApp variables.\n-- To learn more, please visit: \n--    * https://manuals.fibaro.com/home-center-3/\n--    * https://manuals.fibaro.com/home-center-3-quick-apps/\n\n\nlocal temp_sensors_ids = {\n    195,  -- door sensor\n    1019, -- heatit sensor\n    1157  -- aerq temp sensor\n}\n\nfunction getTempValues(ids)\n    local temp_sensor_values = {}\n    for i, id in pairs(ids) do\n        local sensorValue = hub.getValue(id, \"value\")\n        table.insert(temp_sensor_values, sensorValue)\n    end\n    return temp_sensor_values\nend\n\n\nfunction QuickApp:setMinTemp()\n    --[[\n    local temp_sensors = {\n        hub.getValue(195, \"value\"),\n        hub.getValue(1019, \"value\"), -- heatit sensor\n        hub.getValue(1157, \"value\") -- aerq temp sensor\n    }\n    ]]--\n\n    local temp_sensors = getTempValues(temp_sensors_ids)\n\n    min_temp = math.min(table.unpack(temp_sensors))\n    \n    local msg = string.format(\"Minimum temperature is %s\", min_temp)\n    self:debug(msg)\n    self:updateProperty('value', min_temp)\n    self:updateView(\"temp\", \"text\", msg)\n\n    self:updateView(\"all_sensors\", \"text\", string.format(\n        \"Sensor temp #1: %s, sensor temp #2: %s\", temp_sensors[1], temp_sensors[2]\n    )) \n    \nend\n\nfunction math.average(t)\n  local sum = 0\n  for _,v in pairs(t) do -- Get the sum of all numbers in t\n    sum = sum + v\n  end\n  return sum / #t\nend\n\nfunction QuickApp:setAvgTemp()\n--[[\n    local temp_sensors = {\n        hub.getValue(195, \"value\"), -- door sensor\n        hub.getValue(1019, \"value\") -- heatit sensor\n    }\n]]--\n\n    local temp_sensors = getTempValues(temp_sensors_ids)\n\n    local temp = math.average(temp_sensors)\n\n    local msg = string.format(\"Average temperature is %s\", temp)\n    self:debug(msg)\n    self:updateProperty('value', temp)\n    self:updateView(\"temp\", \"text\", msg)\n\n    local all_sensors_text = \"\"\n    for i, id in pairs(temp_sensors_ids) do\n        all_sensors_text = all_sensors_text .. string.format(\"%s: %sC\\n\", hub.getName(id), temp_sensors[i])\n    end\n\n    self:updateView(\"all_sensors\", \"text\", all_sensors_text) \n    \nend\n\nfunction QuickApp:loop()\n    local interval = tonumber(self:getVariable(\"intervalSecs\")) * 1000\n    self:setAvgTemp()\n    fibaro.setTimeout(interval, function()\n        self:loop()\n    end)\nend \n\nfunction QuickApp:onInit()\n    self:debug(\"onInit\")\n    self:loop()    \nend\n"}]}
